#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Энты
====
Энты были созданы в Первоначальную эпоху вместе с другими
обитателями Средиземья. Эльфийские легенды гласят, что когда
Варда зажгла звёзды и пробудились эльфы, вместе с ними
пробудились и энты в Великих Лесах Арды.

Когда энты пришли в Арду, они ещё не умели говорить —
этому искусству их обучали эльфы, и энтам это ужасно нравилось.
Им доставляло удовольствие изучать разные языки, даже щебетание
людей. Эльфы выработали хорошую технику обучения энтов своему
языку. Первый энт, которого обучили эльфы, выучил всего два слова
— «tancave» (да) и «la» (нет). Обученный энт выбрал одного
старого и одного молодого энта, не умеющих говорить, и обучил
их всем словам, которые знал сам. Затем обучение этих двух энтов
продолжили сами эльфы. Каждый обучившийся у эльфов энт снова
выбирал из неговорящих сородичей одного старого и одного молодого,
обучал их всем словам, которые знал, передавал эльфам и так далее.

Выяснилось, что более молодые энты выучивали у эльфов ещё ровно
столько же слов, сколько они узнали от обучавшего их энта.
А вот более старые, уже склонные к одеревенению энты, пополняли
свой запас всего лишь одним словом. После обучения у эльфов
энты до конца света уже не могли выучить ни одного нового слова.

Общее число энтов в Средиземье больше, чем вы думаете. Интересно,
а сколько из них знают ровно 150 квенийских слов? Похожую задачу
вам предстоит решить.
Входные данные Даны натуральные числа K и P (K ≤ 106, 1 ≤ P ≤ 109),
записанные через пробел.

Выходные данные:
Мы понимаем, что число энтов, знающих в точности K слов,
может быть слишком велико, поэтому просим вывести лишь
количество энтов, знающих ровно K слов, по модулю P.

Пример:
k=4   p=10   => 2
k=8   p=10   => 5
k=360 p=1000 => 179
"""

solve="""
Задача имеет динамическое решение.
Среди тех, кто будет знать ровно i слов будут как молодые,
так и старые Энты, каждый из них обучался у какого-то Энта
и впоследствии у Эльфов. Старые Энты, знающие ровно i слов,
могли обучиться этому только у Энтов, которые знали ровно i-1 слово
(еще одно слово они получают от Эльфов). Молодые Энты получат
i слов от тех, кто знал ровно i/2 слов
(вторую половину они получают от Эльфов).
Заметим, что после обучения молодые Энты всегда знают четное количество слов,
поэтому их следует учитывать только для четных i.
Поэтому если a[i] – количество Энтов, знающих ровно i слов,
то a[i]=a[i-1], если i нечетно и a[i]=a[i-1]+a[i/2] иначе.
Поскольку первый Энт знал 2 слова, то a[2]=1,
логично также, что a[0]=a[1]=0, т.к. обученных Энтов с нулевым
или одним словом нет.
Увеличивая значение i от 3-х до k в результате в a[k]
мы получим ответ. Стоит так же заметить, что каждый раз,
определяя очередное значение, следует вычислять остаток отделения на p,
а не один раз это делать в конце программы. Это позволит избежать
переполнение целого типа (хотя для Python это не критично)
"""

k, p = map(int, input().split())

a = [0] * (k + 1) # массив для заполнения числа энтов от числа слов

if k > 1:
    a[2] = 1 # колличество энтов, которые знали 2 слова

for i in range(2, k):
    a[i + 1] = (a[i] + (i % 2) * a[(i + 1) // 2]) % p
    #print("a[", i + 1, "]=", a[i + 1], sep='')

print(a[k])





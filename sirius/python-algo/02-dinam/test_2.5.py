#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Без двух нулей подряд
=====================
Требуется посчитать количество последовательностей
длины N, состоящих из цифр от 0 до K−1 таких,
что никакие два соседних элемента последовательности
не равны нулю одновременно.

Входные данные:
Заданы два натуральных числа N и K (2 ≤ K ≤ 10; 2 ≤ N; 4 ≤ N + K ≤ 18).

Выходные данные:
Необходимо вывести целое число — ответ на задачу.

Пример:
N=2 K=2
ответ: 3

N=3 K=9
ответ: 712
"""

solve="""
Идея решения
============
Допустим, мы знаем количество последовательностей длины N-1
удовлетворяющих условию задачи (без двух нулей подряд) и кроме
того не имеющих нуля на конце - ND[N-1] шт. и число
последовательностей имеющих ноль на конце - NZ[N-1] шт.

Сумма ND + NZ - выражает общее число требуемых последовательностей
заданной длины.

Для расчета ND и NZ можно использоввать рекурентные формуры:

NZ[i] = ND[i-1] - каждую последовательность без нуля на конце
длины i-1 можно дополнить одним нулем и получить более длинную
последовтаельность иного рода.

ND[i] = (NZ[i-1] + ND[i-1]) * (K - 1) - каждую
последовательность (как с нулем на конце та к без) можно дополнить
любой цифрой кроме нуля.
"""

n, k = map(int, input().split())

nd = k - 1 # ND[1]
nz = 1     # NZ[1]
k1 = k - 1 

for i in range(1, n):
    nz, nd = nd, (nz + nd) * k1

print(nd + nz)



#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Гвоздики
========
В дощечку в один ряд вбиты гвоздики.
Любые два гвоздика можно соединить ниточкой.
Требуется соединить некоторые пары гвоздиков
ниточками так, чтобы к каждому гвоздику была
привязана хотя бы одна ниточка, а суммарная
длина всех ниточек была минимальна.

Входные данные:
В первой строке входных данных записано число
N—количество гвоздиков (2 ≤N ≤ 100).
В следующей строке заданы N чисел — координаты
всех гвоздиков (неотрицательные целые числа,
не превосходящие 10000).

Выходные данные:
Выведите единственное число — минимальную суммарную длину всех ниточек.

Примеры:
  Ввод:
  6
  3 4 6 12 13 14
  Вывод: 5
"""

solve="""
Нет никакого смысла соеденять нитками гвозди, между которыми есть другие гвозди.
Для минимизации длины нитки соеденять нужно только соседние гвози.
Если забито N гвоздей, то имеется M=N-1 интервалов между этими гвоздями.
Каждому интервалу можно поставить в соотствие 0 или 1: 1 - означает нитка натянута
между соответсвующими гвоздиками, 1 - нет.
Длина последовательности из 0 и 1 равна M.
В последовтаельности всегда первый и последний элемент 1.
В последовательности не может быть более одного 0 подряд (это приведет к тому,
что будут не привязанные гвозди). Нет смысла делать больше двух 1 подряд - 
это приведет к перерасходу нитки.

Задача сводится к подборуу такой последовательности, которой будет
соответсовать меньший расход нитки. Можно перебрать ВСЕ такие
последовательности. Расход нитки будет скаларным произведением между векторами
данной последовтаельности и размерами интервалов. Но это ДОЛГО!

Можно сразу суммировать все интервалы по следующему правилу:
1. Первы интервал всегда входит в сумму (как и последний)
2. Если предыдущий или последующий интервал в сумму вошел,
   то данны интервал можно отбросить (гвоздики уже подвязаны).

Задача попожа на "лестничную"
один интервал - одна ступенька.
Мы можем идти по каждой ступеньки или перепрыгивать через одну.
Особенность только в том, что на первой и последней ступеньке
надо быть обязательно.
"""

n = int(input())
x = [int(i) for i in input().split()]
x.sort()

# интервалы
y = tuple(x[i + 1] - x[i] for i in range(n - 1))

dp = dm = y[0]
for d in y[1:]:
    dp, dm = dm, min(dp + d, dm + d)

print(dm)



